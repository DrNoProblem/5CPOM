{"ast":null,"code":"var _jsxFileName = \"D:\\\\SUPINFO\\\\5CPOM\\\\front-service\\\\src\\\\pages\\\\1PROJ\\\\1P-index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage1PROJ = _ref => {\n  _s();\n  let {\n    currentUser\n  } = _ref;\n  const [virtualBoard, setVirtualBoard] = useState([[{\n    p: 1,\n    d: [\"E\", \"ES\", \"S\"],\n    ab: \"bot-right\"\n  }, {\n    p: 0,\n    d: [\"E\", \"S\", \"W\"],\n    ab: \"bot-right\"\n  }, {\n    p: 0,\n    d: [\"E\", \"ES\", \"S\", \"SW\", \"W\"],\n    ab: \"\"\n  }, {\n    p: 0,\n    d: [\"E\", \"S\", \"W\"],\n    ab: \"bot-left\"\n  }, {\n    p: 0,\n    d: [\"S\", \"SW\", \"W\"],\n    ab: \"bot-left\"\n  }], [{\n    p: 0,\n    d: [\"N\", \"E\", \"S\"],\n    ab: \"bot-right\"\n  }, {\n    p: -1,\n    d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"],\n    ab: \"diag\"\n  }, {\n    p: 1,\n    d: [\"N\", \"E\", \"S\", \"W\"],\n    ab: \"cross\"\n  }, {\n    p: 0,\n    d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"],\n    ab: \"diag\"\n  }, {\n    p: 0,\n    d: [\"N\", \"S\", \"W\"],\n    ab: \"bot-left\"\n  }], [{\n    p: 0,\n    d: [\"N\", \"NE\", \"E\", \"ES\", \"S\"],\n    ab: \"\"\n  }, {\n    p: 0,\n    d: [\"N\", \"E\", \"S\", \"W\"],\n    ab: \"cross\"\n  }, {\n    p: 1,\n    d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"],\n    ab: \"\"\n  }, {\n    p: -1,\n    d: [\"N\", \"E\", \"S\", \"W\"],\n    ab: \"cross\"\n  }, {\n    p: 0,\n    d: [\"N\", \"S\", \"SW\", \"W\", \"WN\"],\n    ab: \"\"\n  }], [{\n    p: 0,\n    d: [\"N\", \"E\", \"S\"],\n    ab: \"top-right\"\n  }, {\n    p: 0,\n    d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"],\n    ab: \"diag\"\n  }, {\n    p: 0,\n    d: [\"N\", \"E\", \"S\", \"W\"],\n    ab: \"cross\"\n  }, {\n    p: 0,\n    d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"],\n    ab: \"diag\"\n  }, {\n    p: 0,\n    d: [\"N\", \"S\", \"W\"],\n    ab: \"top-left\"\n  }], [{\n    p: 0,\n    d: [\"N\", \"NE\", \"E\"],\n    ab: \"top-right\"\n  }, {\n    p: 0,\n    d: [\"N\", \"E\", \"W\"],\n    ab: \"top-right\"\n  }, {\n    p: 0,\n    d: [\"N\", \"NE\", \"E\", \"W\", \"WN\"],\n    ab: \"\"\n  }, {\n    p: 0,\n    d: [\"N\", \"E\", \"W\"],\n    ab: \"top-left\"\n  }, {\n    p: 0,\n    d: [\"N\", \"W\", \"WN\"],\n    ab: \"top-left\"\n  }]]);\n  const [P1score, setP1score] = useState(0);\n  const [P2score, setP2score] = useState(0);\n  const [MenuOpen, setMenuOpen] = useState(true);\n  const [PlayerTurn, setPlayerTurn] = useState(0);\n  const InitGame = () => {\n    setMenuOpen(false);\n    setPlayerTurn(-1);\n  };\n  const getListDirectionSelectedPawn = Pawn => {\n    const PlaceDirection = virtualBoard[Pawn.y][Pawn.x].d;\n    if (Pawn.player === -1) return PlaceDirection.filter(direction => !direction.includes(\"S\"));else if (Pawn.player === 1) return PlaceDirection.filter(direction => !direction.includes(\"N\"));\n    return PlaceDirection;\n  };\n  const nextTurn = pawn => {\n    let PawnListToRemoveByNoCapture = [];\n    virtualBoard.forEach((line, yIndex) => {\n      line.forEach((row, xIndex) => {\n        if (!(xIndex === pawn.x && yIndex === pawn.y)) {\n          if (row.p === PlayerTurn) {\n            const ListOfEat = checkPossibleEat({\n              x: xIndex,\n              y: yIndex,\n              player: PlayerTurn\n            });\n            if (ListOfEat.length !== 0) PawnListToRemoveByNoCapture.push({\n              x: xIndex,\n              y: yIndex,\n              player: PlayerTurn\n            });\n          }\n        }\n      });\n    });\n    setVirtualBoard(currentBoard => {\n      const newBoard = JSON.parse(JSON.stringify(currentBoard));\n      PawnListToRemoveByNoCapture.forEach(target => {\n        newBoard[target.y][target.x].p = 0;\n      });\n      return newBoard;\n    });\n    if (document.querySelector(\".pawn-selected\")) document.querySelector(\".pawn-selected\").classList.remove(\"pawn-selected\");\n    setPawnSelected(false);\n    setPlayerTurn(PlayerTurn * -1);\n    const stateFinish = checkOnceWin();\n    if (stateFinish === 1) console.log('red win');else if (stateFinish === -1) console.log('blue win');else if (stateFinish === 2) console.log('egality');\n  };\n  const checkOnceWin = () => {\n    let RedPlayerCount = 0;\n    let BluePlayerCount = 0;\n    virtualBoard.forEach(line => {\n      line.forEach(row => {\n        if (row.p === 1) {\n          RedPlayerCount++;\n        } else if (row.p === 1) {\n          BluePlayerCount++;\n        }\n      });\n    });\n    if (RedPlayerCount === 0 && BluePlayerCount === 0) return 2;else if (RedPlayerCount === 0) return -1;else if (BluePlayerCount === 0) return 1;else return 0;\n  };\n  const clickPawn = element => {\n    let spanPawn = element.target;\n    if (spanPawn.classList.contains(\"pawn\")) spanPawn = spanPawn.parentElement;\n    const tempoPawn = {\n      x: parseInt(spanPawn.dataset[\"placementX\"]),\n      y: parseInt(spanPawn.dataset[\"placementY\"]),\n      player: parseInt(spanPawn.dataset[\"player\"])\n    };\n    if (PawnSelected) {\n      console.log(spanPawn.children.length);\n      if (spanPawn.children.length !== 0) {\n        spanPawn.classList.remove(\"pawn-selected\");\n        setPawnSelected(false);\n        return false;\n      }\n      const possibleMove = checkPossibleMove(PawnSelected);\n      const possibleEat = checkPossibleEat(PawnSelected);\n      let targetPosition;\n      const listOfPossiblePosition = getListOfPositionPossible(possibleMove, possibleEat);\n      if (listOfPossiblePosition.move.includes(`${tempoPawn.x}&${tempoPawn.y}`)) targetPosition = \"move\";else if (listOfPossiblePosition.eat.includes(`${tempoPawn.x}&${tempoPawn.y}`)) targetPosition = \"eat\";else targetPosition = \"null\";\n      if (targetPosition === \"move\" && possibleEat.length !== 0) {\n        setVirtualBoard(currentBoard => {\n          const newBoard = JSON.parse(JSON.stringify(currentBoard));\n          newBoard[tempoPawn.y][tempoPawn.x].p = 0;\n          return newBoard;\n        });\n        nextTurn(tempoPawn);\n      }\n      if (targetPosition === \"move\") MovePawn(tempoPawn);else if (targetPosition === \"eat\") EatPawn(tempoPawn);\n      if (document.querySelector(\".pawn-selected\")) document.querySelector(\".pawn-selected\").classList.remove(\"pawn-selected\");\n      if (targetPosition === \"eat\") {\n        const NewPossibleEat = checkPossibleEat(tempoPawn);\n        console.log(\"NewPossibleEat\", NewPossibleEat); //!\n        if (NewPossibleEat.length !== 0) {\n          spanPawn.classList.add(\"pawn-selected\");\n          setPawnSelected(tempoPawn);\n        } else nextTurn(tempoPawn);\n      } else nextTurn(tempoPawn);\n    } else {\n      if (spanPawn.children.length === 0) return false;\n      if (parseInt(spanPawn.dataset[\"player\"]) !== PlayerTurn) return false;\n      const possibleMove = checkPossibleMove(tempoPawn);\n      const possibleEat = checkPossibleEat(tempoPawn);\n      if (possibleMove.length === 0 && possibleEat.length === 0) return false;\n      console.log(\"move\", possibleMove); //!\n      console.log(\"eat\", possibleEat); //!\n      spanPawn.classList.add(\"pawn-selected\");\n      setPawnSelected(tempoPawn);\n    }\n  };\n  const getListOfPositionPossible = (MoveDirection, EatDirection) => {\n    let EatPositionPossible = [];\n    let MovePositionPossible = [];\n    if (PawnSelected) {\n      MoveDirection.forEach(e => {\n        switch (e) {\n          case \"N\":\n            MovePositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y - 1));\n            break;\n          case \"E\":\n            MovePositionPossible.push(PawnSelected.x + 1 + \"&\" + PawnSelected.y);\n            break;\n          case \"S\":\n            MovePositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y + 1));\n            break;\n          case \"W\":\n            MovePositionPossible.push(PawnSelected.x - 1 + \"&\" + PawnSelected.y);\n            break;\n          case \"NE\":\n            MovePositionPossible.push(PawnSelected.x + 1 + \"&\" + (PawnSelected.y - 1));\n            break;\n          case \"WN\":\n            MovePositionPossible.push(PawnSelected.x - 1 + \"&\" + (PawnSelected.y - 1));\n            break;\n          case \"ES\":\n            MovePositionPossible.push(PawnSelected.x + 1 + \"&\" + (PawnSelected.y + 1));\n            break;\n          case \"SW\":\n            MovePositionPossible.push(PawnSelected.x - 1 + \"&\" + (PawnSelected.y + 1));\n            break;\n        }\n      });\n      EatDirection.forEach(e => {\n        switch (e) {\n          case \"N\":\n            EatPositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y - 2));\n            break;\n          case \"E\":\n            EatPositionPossible.push(PawnSelected.x + 2 + \"&\" + PawnSelected.y);\n            break;\n          case \"S\":\n            EatPositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y + 2));\n            break;\n          case \"W\":\n            EatPositionPossible.push(PawnSelected.x - 2 + \"&\" + PawnSelected.y);\n            break;\n          case \"NE\":\n            EatPositionPossible.push(PawnSelected.x + 2 + \"&\" + (PawnSelected.y - 2));\n            break;\n          case \"WN\":\n            EatPositionPossible.push(PawnSelected.x - 2 + \"&\" + (PawnSelected.y - 2));\n            break;\n          case \"ES\":\n            EatPositionPossible.push(PawnSelected.x + 2 + \"&\" + (PawnSelected.y + 2));\n            break;\n          case \"SW\":\n            EatPositionPossible.push(PawnSelected.x - 2 + \"&\" + (PawnSelected.y + 2));\n            break;\n        }\n      });\n    }\n    return {\n      move: MovePositionPossible,\n      eat: EatPositionPossible\n    };\n  };\n  const checkPossibleEat = Pawn => {\n    let EatPossbile = [];\n    virtualBoard[Pawn.y][Pawn.x].d.forEach(e => {\n      switch (e) {\n        case \"N\":\n          if (virtualBoard[Pawn.y - 1][Pawn.x] && virtualBoard[Pawn.y - 1][Pawn.x].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y - 1][Pawn.x].d.includes(\"N\")) {\n              if (virtualBoard[Pawn.y - 2][Pawn.x] && virtualBoard[Pawn.y - 2][Pawn.x].p === 0) {\n                EatPossbile.push(\"N\");\n              }\n            }\n          }\n          break;\n        case \"E\":\n          if (virtualBoard[Pawn.y][Pawn.x + 1] && virtualBoard[Pawn.y][Pawn.x + 1].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y][Pawn.x + 1].d.includes(\"E\")) {\n              if (virtualBoard[Pawn.y][Pawn.x + 2] && virtualBoard[Pawn.y][Pawn.x + 2].p === 0) {\n                EatPossbile.push(\"E\");\n              }\n            }\n          }\n          break;\n        case \"S\":\n          if (virtualBoard[Pawn.y + 1][Pawn.x] && virtualBoard[Pawn.y + 1][Pawn.x].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y + 1][Pawn.x].d.includes(\"S\")) {\n              if (virtualBoard[Pawn.y + 2][Pawn.x] && virtualBoard[Pawn.y + 2][Pawn.x].p === 0) {\n                EatPossbile.push(\"S\");\n              }\n            }\n          }\n          break;\n        case \"W\":\n          if (virtualBoard[Pawn.y][Pawn.x - 1] && virtualBoard[Pawn.y][Pawn.x - 1].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y][Pawn.x - 1].d.includes(\"W\")) {\n              if (virtualBoard[Pawn.y][Pawn.x - 2] && virtualBoard[Pawn.y][Pawn.x - 2].p === 0) {\n                EatPossbile.push(\"W\");\n              }\n            }\n          }\n          break;\n        case \"NE\":\n          if (virtualBoard[Pawn.y - 1][Pawn.x + 1] && virtualBoard[Pawn.y - 1][Pawn.x + 1].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y - 1][Pawn.x + 1].d.includes(\"NE\")) {\n              if (virtualBoard[Pawn.y - 2][Pawn.x + 2] && virtualBoard[Pawn.y - 2][Pawn.x + 2].p === 0) {\n                EatPossbile.push(\"NE\");\n              }\n            }\n          }\n          break;\n        case \"WN\":\n          if (virtualBoard[Pawn.y - 1][Pawn.x - 1] && virtualBoard[Pawn.y - 1][Pawn.x - 1].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y - 1][Pawn.x - 1].d.includes(\"WN\")) {\n              if (virtualBoard[Pawn.y - 2][Pawn.x - 2] && virtualBoard[Pawn.y - 2][Pawn.x - 2].p === 0) {\n                EatPossbile.push(\"WN\");\n              }\n            }\n          }\n          break;\n        case \"ES\":\n          if (virtualBoard[Pawn.y + 1][Pawn.x + 1] && virtualBoard[Pawn.y + 1][Pawn.x + 1].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y + 1][Pawn.x + 1].d.includes(\"ES\")) {\n              if (virtualBoard[Pawn.y + 2][Pawn.x + 2] && virtualBoard[Pawn.y + 2][Pawn.x + 2].p === 0) {\n                EatPossbile.push(\"ES\");\n              }\n            }\n          }\n          break;\n        case \"SW\":\n          if (virtualBoard[Pawn.y + 1][Pawn.x - 1] && virtualBoard[Pawn.y + 1][Pawn.x - 1].p === PlayerTurn * -1) {\n            if (virtualBoard[Pawn.y + 1][Pawn.x - 1].d.includes(\"SW\")) {\n              if (virtualBoard[Pawn.y + 2][Pawn.x - 2] && virtualBoard[Pawn.y + 2][Pawn.x - 2].p === 0) {\n                EatPossbile.push(\"SW\");\n              }\n            }\n          }\n          break;\n      }\n    });\n    return EatPossbile;\n  };\n  const checkPossibleMove = Pawn => {\n    let MovePossible = [];\n    let listDirection = getListDirectionSelectedPawn(Pawn);\n    if (listDirection && listDirection.length > 0) {\n      listDirection.forEach(element => {\n        switch (element) {\n          case \"N\":\n            if (virtualBoard[Pawn.y - 1][Pawn.x] && virtualBoard[Pawn.y - 1][Pawn.x].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n          case \"NE\":\n            if (virtualBoard[Pawn.y - 1][Pawn.x + 1] && virtualBoard[Pawn.y - 1][Pawn.x + 1].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n          case \"E\":\n            if (virtualBoard[Pawn.y][Pawn.x + 1] && virtualBoard[Pawn.y][Pawn.x + 1].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n          case \"ES\":\n            if (virtualBoard[Pawn.y + 1][Pawn.x + 1] && virtualBoard[Pawn.y + 1][Pawn.x + 1].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n          case \"S\":\n            if (virtualBoard[Pawn.y + 1][Pawn.x] && virtualBoard[Pawn.y + 1][Pawn.x].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n          case \"SW\":\n            if (virtualBoard[Pawn.y + 1][Pawn.x - 1] && virtualBoard[Pawn.y + 1][Pawn.y - 1].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n          case \"W\":\n            if (virtualBoard[Pawn.y][Pawn.x - 1] && virtualBoard[Pawn.y][Pawn.x - 1].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n          case \"WN\":\n            if (virtualBoard[Pawn.y - 1][Pawn.x - 1] && virtualBoard[Pawn.y - 1][Pawn.x - 1].p === 0) {\n              MovePossible.push(element);\n            }\n            break;\n        }\n      });\n    }\n    return MovePossible;\n  };\n  const MovePawn = target => {\n    console.log(\"target move\", target); //!\n    if (!PawnSelected) return false;\n    setVirtualBoard(currentBoard => {\n      const newBoard = JSON.parse(JSON.stringify(currentBoard));\n      newBoard[PawnSelected.y][PawnSelected.x].p = 0;\n      newBoard[target.y][target.x].p = PlayerTurn;\n      return newBoard;\n    });\n    setPawnSelected(false);\n  };\n  const EatPawn = target => {\n    console.log(\"target move\", target); //!\n    if (!PawnSelected) return false;\n    let xEat = target.x - PawnSelected.x;\n    let yEat = target.y - PawnSelected.y;\n    const targetEat = {\n      x: (xEat !== 0 ? xEat / 2 : xEat) + PawnSelected.x,\n      y: (yEat !== 0 ? yEat / 2 : yEat) + PawnSelected.y\n    };\n    setVirtualBoard(currentBoard => {\n      const newBoard = JSON.parse(JSON.stringify(currentBoard));\n      newBoard[PawnSelected.y][PawnSelected.x].p = 0;\n      newBoard[target.y][target.x].p = PlayerTurn;\n      newBoard[targetEat.y][targetEat.x].p = 0;\n      return newBoard;\n    });\n  };\n  const [PawnSelected, setPawnSelected] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `main p20 flex-col relative flex-end-align g25`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col g25 w100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"m0\",\n        children: [\"Projects : 1PROJ\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons ml25\",\n          onClick: () => setMenuOpen(true),\n          children: \"settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `big-dark-container scores flex-center g50  playerTurn${PlayerTurn}`,\n        onClick: () => console.log(virtualBoard) //!\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: P1score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: P2score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `board-container flex-col flex-center g25 big-dark-container `,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `board playerTurn${PlayerTurn}`,\n          children: virtualBoard.map((e, ei) => e.map((f, fi) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"setting-line \" + f.ab,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"case flex-center\",\n              \"data-placement-y\": ei,\n              \"data-placement-x\": fi,\n              \"data-player\": f.p,\n              onClick: e => clickPawn(e),\n              children: f.p !== 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => clickPawn(e),\n                className: `pawn flex-center ${f.p === 1 ? \"red-player\" : \"blue-player\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 34\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this)\n          }, \"case-\" + ei + \"-\" + fi, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), MenuOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-pop-up absolute zi5 flex-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small-normal-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"m0 mb25 blue txt-center\",\n              children: \"Game Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-rox flex-between g25\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cta cta-blue\",\n                onClick: () => InitGame(),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: PlayerTurn === 0 ? \"START\" : \"RESUME\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"cta cta-red\",\n                to: \"/\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage1PROJ, \"YPMM8VMidy32Y8nMXo8R9t5ocY0=\");\n_c = HomePage1PROJ;\nexport default HomePage1PROJ;\nvar _c;\n$RefreshReg$(_c, \"HomePage1PROJ\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","HomePage1PROJ","_ref","_s","currentUser","virtualBoard","setVirtualBoard","p","d","ab","P1score","setP1score","P2score","setP2score","MenuOpen","setMenuOpen","PlayerTurn","setPlayerTurn","InitGame","getListDirectionSelectedPawn","Pawn","PlaceDirection","y","x","player","filter","direction","includes","nextTurn","pawn","PawnListToRemoveByNoCapture","forEach","line","yIndex","row","xIndex","ListOfEat","checkPossibleEat","length","push","currentBoard","newBoard","JSON","parse","stringify","target","document","querySelector","classList","remove","setPawnSelected","stateFinish","checkOnceWin","console","log","RedPlayerCount","BluePlayerCount","clickPawn","element","spanPawn","contains","parentElement","tempoPawn","parseInt","dataset","PawnSelected","children","possibleMove","checkPossibleMove","possibleEat","targetPosition","listOfPossiblePosition","getListOfPositionPossible","move","eat","MovePawn","EatPawn","NewPossibleEat","add","MoveDirection","EatDirection","EatPositionPossible","MovePositionPossible","e","EatPossbile","MovePossible","listDirection","xEat","yEat","targetEat","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","ei","f","fi","to","_c","$RefreshReg$"],"sources":["D:/SUPINFO/5CPOM/front-service/src/pages/1PROJ/1P-index.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserModel from \"../../models/user-model\";\r\nimport \"./style.scss\";\r\n\r\ntype Props = {\r\n  currentUser: UserModel;\r\n};\r\n\r\ninterface Pawn {\r\n  x: number;\r\n  y: number;\r\n  player: number;\r\n}\r\n\r\nconst HomePage1PROJ: FunctionComponent<Props> = ({ currentUser }) => {\r\n  const [virtualBoard, setVirtualBoard] = useState<{ p: number; d: string[]; ab: string }[][]>([\r\n    [\r\n      { p: 1, d: [\"E\", \"ES\", \"S\"], ab: \"bot-right\" },\r\n      { p: 0, d: [\"E\", \"S\", \"W\"], ab: \"bot-right\" },\r\n      { p: 0, d: [\"E\", \"ES\", \"S\", \"SW\", \"W\"], ab: \"\" },\r\n      { p: 0, d: [\"E\", \"S\", \"W\"], ab: \"bot-left\" },\r\n      { p: 0, d: [\"S\", \"SW\", \"W\"], ab: \"bot-left\" },\r\n    ],\r\n    [\r\n      { p: 0, d: [\"N\", \"E\", \"S\"], ab: \"bot-right\" },\r\n      { p: -1, d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"], ab: \"diag\" },\r\n      { p: 1, d: [\"N\", \"E\", \"S\", \"W\"], ab: \"cross\" },\r\n      { p: 0, d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"], ab: \"diag\" },\r\n      { p: 0, d: [\"N\", \"S\", \"W\"], ab: \"bot-left\" },\r\n    ],\r\n    [\r\n      { p: 0, d: [\"N\", \"NE\", \"E\", \"ES\", \"S\"], ab: \"\" },\r\n      { p: 0, d: [\"N\", \"E\", \"S\", \"W\"], ab: \"cross\" },\r\n      { p: 1, d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"], ab: \"\" },\r\n      { p: -1, d: [\"N\", \"E\", \"S\", \"W\"], ab: \"cross\" },\r\n      { p: 0, d: [\"N\", \"S\", \"SW\", \"W\", \"WN\"], ab: \"\" },\r\n    ],\r\n    [\r\n      { p: 0, d: [\"N\", \"E\", \"S\"], ab: \"top-right\" },\r\n      { p: 0, d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"], ab: \"diag\" },\r\n      { p: 0, d: [\"N\", \"E\", \"S\", \"W\"], ab: \"cross\" },\r\n      { p: 0, d: [\"N\", \"NE\", \"E\", \"ES\", \"S\", \"SW\", \"W\", \"WN\"], ab: \"diag\" },\r\n      { p: 0, d: [\"N\", \"S\", \"W\"], ab: \"top-left\" },\r\n    ],\r\n    [\r\n      { p: 0, d: [\"N\", \"NE\", \"E\"], ab: \"top-right\" },\r\n      { p: 0, d: [\"N\", \"E\", \"W\"], ab: \"top-right\" },\r\n      { p: 0, d: [\"N\", \"NE\", \"E\", \"W\", \"WN\"], ab: \"\" },\r\n      { p: 0, d: [\"N\", \"E\", \"W\"], ab: \"top-left\" },\r\n      { p: 0, d: [\"N\", \"W\", \"WN\"], ab: \"top-left\" },\r\n    ],\r\n  ]);\r\n\r\n  const [P1score, setP1score] = useState<number>(0);\r\n  const [P2score, setP2score] = useState<number>(0);\r\n\r\n  const [MenuOpen, setMenuOpen] = useState<boolean>(true);\r\n\r\n  const [PlayerTurn, setPlayerTurn] = useState<number>(0);\r\n\r\n  const InitGame = () => {\r\n    setMenuOpen(false);\r\n    setPlayerTurn(-1);\r\n  };\r\n\r\n  const getListDirectionSelectedPawn = (Pawn: Pawn) => {\r\n    const PlaceDirection: string[] = virtualBoard[Pawn.y][Pawn.x].d;\r\n    if (Pawn.player === -1) return PlaceDirection.filter((direction) => !direction.includes(\"S\"));\r\n    else if (Pawn.player === 1) return PlaceDirection.filter((direction) => !direction.includes(\"N\"));\r\n    return PlaceDirection;\r\n  };\r\n\r\n  const nextTurn = (pawn: Pawn) => {\r\n    let PawnListToRemoveByNoCapture: Pawn[] = [];\r\n    virtualBoard.forEach((line, yIndex) => {\r\n      line.forEach((row, xIndex) => {\r\n        if (!(xIndex === pawn.x && yIndex === pawn.y)) {\r\n          if (row.p === PlayerTurn) {\r\n            const ListOfEat = checkPossibleEat({ x: xIndex, y: yIndex, player: PlayerTurn });\r\n            if (ListOfEat.length !== 0) PawnListToRemoveByNoCapture.push({ x: xIndex, y: yIndex, player: PlayerTurn });\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    setVirtualBoard((currentBoard) => {\r\n      const newBoard = JSON.parse(JSON.stringify(currentBoard));\r\n      PawnListToRemoveByNoCapture.forEach((target) => {\r\n        newBoard[target.y][target.x].p = 0;\r\n      });\r\n      return newBoard;\r\n    });\r\n\r\n    if (document.querySelector(\".pawn-selected\")) document.querySelector(\".pawn-selected\")!.classList.remove(\"pawn-selected\");\r\n    setPawnSelected(false);\r\n    setPlayerTurn(PlayerTurn * -1);\r\n    const stateFinish: number = checkOnceWin();\r\n    if (stateFinish === 1) console.log('red win');\r\n    else if (stateFinish === -1) console.log('blue win');\r\n    else if (stateFinish === 2) console.log('egality');\r\n  };\r\n\r\n  const checkOnceWin = () => {\r\n    let RedPlayerCount: number = 0;\r\n    let BluePlayerCount: number = 0;\r\n    virtualBoard.forEach((line) => {\r\n      line.forEach((row) => {\r\n        if (row.p === 1) {\r\n          RedPlayerCount++;\r\n        } else if (row.p === 1) {\r\n          BluePlayerCount++;\r\n        }\r\n      });\r\n    });\r\n    if (RedPlayerCount === 0 && BluePlayerCount === 0) return 2;\r\n    else if (RedPlayerCount === 0) return -1;\r\n    else if (BluePlayerCount === 0) return 1;\r\n    else return 0;\r\n  };\r\n\r\n  const clickPawn = (element: any) => {\r\n    let spanPawn = element.target;\r\n    if (spanPawn.classList.contains(\"pawn\")) spanPawn = spanPawn.parentElement;\r\n\r\n    const tempoPawn = {\r\n      x: parseInt(spanPawn.dataset[\"placementX\"]),\r\n      y: parseInt(spanPawn.dataset[\"placementY\"]),\r\n      player: parseInt(spanPawn.dataset[\"player\"]),\r\n    };\r\n\r\n    if (PawnSelected) {\r\n      console.log(spanPawn.children.length);\r\n      if (spanPawn.children.length !== 0) {\r\n        spanPawn.classList.remove(\"pawn-selected\");\r\n        setPawnSelected(false);\r\n        return false;\r\n      }\r\n\r\n      const possibleMove = checkPossibleMove(PawnSelected);\r\n      const possibleEat = checkPossibleEat(PawnSelected);\r\n\r\n      let targetPosition: string;\r\n      const listOfPossiblePosition: { move: string[]; eat: string[] } = getListOfPositionPossible(possibleMove, possibleEat);\r\n      if (listOfPossiblePosition.move.includes(`${tempoPawn.x}&${tempoPawn.y}`)) targetPosition = \"move\";\r\n      else if (listOfPossiblePosition.eat.includes(`${tempoPawn.x}&${tempoPawn.y}`)) targetPosition = \"eat\";\r\n      else targetPosition = \"null\";\r\n\r\n      if (targetPosition === \"move\" && possibleEat.length !== 0) {\r\n        setVirtualBoard((currentBoard) => {\r\n          const newBoard = JSON.parse(JSON.stringify(currentBoard));\r\n          newBoard[tempoPawn.y][tempoPawn.x].p = 0;\r\n          return newBoard;\r\n        });\r\n        nextTurn(tempoPawn);\r\n      }\r\n\r\n      if (targetPosition === \"move\") MovePawn(tempoPawn);\r\n      else if (targetPosition === \"eat\") EatPawn(tempoPawn);\r\n\r\n      if (document.querySelector(\".pawn-selected\")) document.querySelector(\".pawn-selected\")!.classList.remove(\"pawn-selected\");\r\n      if (targetPosition === \"eat\") {\r\n        const NewPossibleEat = checkPossibleEat(tempoPawn);\r\n        console.log(\"NewPossibleEat\", NewPossibleEat); //!\r\n        if (NewPossibleEat.length !== 0) {\r\n          spanPawn.classList.add(\"pawn-selected\");\r\n          setPawnSelected(tempoPawn);\r\n        } else nextTurn(tempoPawn);\r\n      } else nextTurn(tempoPawn);\r\n    } else {\r\n      if (spanPawn.children.length === 0) return false;\r\n      if (parseInt(spanPawn.dataset[\"player\"]) !== PlayerTurn) return false;\r\n      const possibleMove = checkPossibleMove(tempoPawn);\r\n      const possibleEat = checkPossibleEat(tempoPawn);\r\n      if (possibleMove.length === 0 && possibleEat.length === 0) return false;\r\n      console.log(\"move\", possibleMove); //!\r\n      console.log(\"eat\", possibleEat); //!\r\n      spanPawn.classList.add(\"pawn-selected\");\r\n      setPawnSelected(tempoPawn);\r\n    }\r\n  };\r\n\r\n  const getListOfPositionPossible = (MoveDirection: string[], EatDirection: string[]): { move: string[]; eat: string[] } => {\r\n    let EatPositionPossible: string[] = [];\r\n    let MovePositionPossible: string[] = [];\r\n    if (PawnSelected) {\r\n      MoveDirection.forEach((e) => {\r\n        switch (e) {\r\n          case \"N\":\r\n            MovePositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y - 1));\r\n            break;\r\n          case \"E\":\r\n            MovePositionPossible.push(PawnSelected.x + 1 + \"&\" + PawnSelected.y);\r\n            break;\r\n          case \"S\":\r\n            MovePositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y + 1));\r\n            break;\r\n          case \"W\":\r\n            MovePositionPossible.push(PawnSelected.x - 1 + \"&\" + PawnSelected.y);\r\n            break;\r\n          case \"NE\":\r\n            MovePositionPossible.push(PawnSelected.x + 1 + \"&\" + (PawnSelected.y - 1));\r\n            break;\r\n          case \"WN\":\r\n            MovePositionPossible.push(PawnSelected.x - 1 + \"&\" + (PawnSelected.y - 1));\r\n            break;\r\n          case \"ES\":\r\n            MovePositionPossible.push(PawnSelected.x + 1 + \"&\" + (PawnSelected.y + 1));\r\n            break;\r\n          case \"SW\":\r\n            MovePositionPossible.push(PawnSelected.x - 1 + \"&\" + (PawnSelected.y + 1));\r\n            break;\r\n        }\r\n      });\r\n      EatDirection.forEach((e) => {\r\n        switch (e) {\r\n          case \"N\":\r\n            EatPositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y - 2));\r\n            break;\r\n          case \"E\":\r\n            EatPositionPossible.push(PawnSelected.x + 2 + \"&\" + PawnSelected.y);\r\n            break;\r\n          case \"S\":\r\n            EatPositionPossible.push(PawnSelected.x + \"&\" + (PawnSelected.y + 2));\r\n            break;\r\n          case \"W\":\r\n            EatPositionPossible.push(PawnSelected.x - 2 + \"&\" + PawnSelected.y);\r\n            break;\r\n          case \"NE\":\r\n            EatPositionPossible.push(PawnSelected.x + 2 + \"&\" + (PawnSelected.y - 2));\r\n            break;\r\n          case \"WN\":\r\n            EatPositionPossible.push(PawnSelected.x - 2 + \"&\" + (PawnSelected.y - 2));\r\n            break;\r\n          case \"ES\":\r\n            EatPositionPossible.push(PawnSelected.x + 2 + \"&\" + (PawnSelected.y + 2));\r\n            break;\r\n          case \"SW\":\r\n            EatPositionPossible.push(PawnSelected.x - 2 + \"&\" + (PawnSelected.y + 2));\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    return { move: MovePositionPossible, eat: EatPositionPossible };\r\n  };\r\n\r\n  const checkPossibleEat = (Pawn: Pawn): string[] => {\r\n    let EatPossbile: string[] = [];\r\n\r\n    virtualBoard[Pawn.y][Pawn.x].d.forEach((e) => {\r\n      switch (e) {\r\n        case \"N\":\r\n          if (virtualBoard[Pawn.y - 1][Pawn.x] && virtualBoard[Pawn.y - 1][Pawn.x].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y - 1][Pawn.x].d.includes(\"N\")) {\r\n              if (virtualBoard[Pawn.y - 2][Pawn.x] && virtualBoard[Pawn.y - 2][Pawn.x].p === 0) {\r\n                EatPossbile.push(\"N\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"E\":\r\n          if (virtualBoard[Pawn.y][Pawn.x + 1] && virtualBoard[Pawn.y][Pawn.x + 1].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y][Pawn.x + 1].d.includes(\"E\")) {\r\n              if (virtualBoard[Pawn.y][Pawn.x + 2] && virtualBoard[Pawn.y][Pawn.x + 2].p === 0) {\r\n                EatPossbile.push(\"E\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"S\":\r\n          if (virtualBoard[Pawn.y + 1][Pawn.x] && virtualBoard[Pawn.y + 1][Pawn.x].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y + 1][Pawn.x].d.includes(\"S\")) {\r\n              if (virtualBoard[Pawn.y + 2][Pawn.x] && virtualBoard[Pawn.y + 2][Pawn.x].p === 0) {\r\n                EatPossbile.push(\"S\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"W\":\r\n          if (virtualBoard[Pawn.y][Pawn.x - 1] && virtualBoard[Pawn.y][Pawn.x - 1].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y][Pawn.x - 1].d.includes(\"W\")) {\r\n              if (virtualBoard[Pawn.y][Pawn.x - 2] && virtualBoard[Pawn.y][Pawn.x - 2].p === 0) {\r\n                EatPossbile.push(\"W\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"NE\":\r\n          if (virtualBoard[Pawn.y - 1][Pawn.x + 1] && virtualBoard[Pawn.y - 1][Pawn.x + 1].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y - 1][Pawn.x + 1].d.includes(\"NE\")) {\r\n              if (virtualBoard[Pawn.y - 2][Pawn.x + 2] && virtualBoard[Pawn.y - 2][Pawn.x + 2].p === 0) {\r\n                EatPossbile.push(\"NE\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"WN\":\r\n          if (virtualBoard[Pawn.y - 1][Pawn.x - 1] && virtualBoard[Pawn.y - 1][Pawn.x - 1].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y - 1][Pawn.x - 1].d.includes(\"WN\")) {\r\n              if (virtualBoard[Pawn.y - 2][Pawn.x - 2] && virtualBoard[Pawn.y - 2][Pawn.x - 2].p === 0) {\r\n                EatPossbile.push(\"WN\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"ES\":\r\n          if (virtualBoard[Pawn.y + 1][Pawn.x + 1] && virtualBoard[Pawn.y + 1][Pawn.x + 1].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y + 1][Pawn.x + 1].d.includes(\"ES\")) {\r\n              if (virtualBoard[Pawn.y + 2][Pawn.x + 2] && virtualBoard[Pawn.y + 2][Pawn.x + 2].p === 0) {\r\n                EatPossbile.push(\"ES\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"SW\":\r\n          if (virtualBoard[Pawn.y + 1][Pawn.x - 1] && virtualBoard[Pawn.y + 1][Pawn.x - 1].p === PlayerTurn * -1) {\r\n            if (virtualBoard[Pawn.y + 1][Pawn.x - 1].d.includes(\"SW\")) {\r\n              if (virtualBoard[Pawn.y + 2][Pawn.x - 2] && virtualBoard[Pawn.y + 2][Pawn.x - 2].p === 0) {\r\n                EatPossbile.push(\"SW\");\r\n              }\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    });\r\n    return EatPossbile;\r\n  };\r\n\r\n  const checkPossibleMove = (Pawn: Pawn): string[] => {\r\n    let MovePossible: string[] = [];\r\n    let listDirection = getListDirectionSelectedPawn(Pawn);\r\n    if (listDirection && listDirection.length > 0) {\r\n      listDirection.forEach((element: string) => {\r\n        switch (element) {\r\n          case \"N\":\r\n            if (virtualBoard[Pawn.y - 1][Pawn.x] && virtualBoard[Pawn.y - 1][Pawn.x].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n          case \"NE\":\r\n            if (virtualBoard[Pawn.y - 1][Pawn.x + 1] && virtualBoard[Pawn.y - 1][Pawn.x + 1].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n          case \"E\":\r\n            if (virtualBoard[Pawn.y][Pawn.x + 1] && virtualBoard[Pawn.y][Pawn.x + 1].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n          case \"ES\":\r\n            if (virtualBoard[Pawn.y + 1][Pawn.x + 1] && virtualBoard[Pawn.y + 1][Pawn.x + 1].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n          case \"S\":\r\n            if (virtualBoard[Pawn.y + 1][Pawn.x] && virtualBoard[Pawn.y + 1][Pawn.x].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n          case \"SW\":\r\n            if (virtualBoard[Pawn.y + 1][Pawn.x - 1] && virtualBoard[Pawn.y + 1][Pawn.y - 1].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n          case \"W\":\r\n            if (virtualBoard[Pawn.y][Pawn.x - 1] && virtualBoard[Pawn.y][Pawn.x - 1].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n          case \"WN\":\r\n            if (virtualBoard[Pawn.y - 1][Pawn.x - 1] && virtualBoard[Pawn.y - 1][Pawn.x - 1].p === 0) {\r\n              MovePossible.push(element);\r\n            }\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    return MovePossible;\r\n  };\r\n\r\n  const MovePawn = (target: Pawn) => {\r\n    console.log(\"target move\", target); //!\r\n    if (!PawnSelected) return false;\r\n    setVirtualBoard((currentBoard) => {\r\n      const newBoard = JSON.parse(JSON.stringify(currentBoard));\r\n      newBoard[PawnSelected.y][PawnSelected.x].p = 0;\r\n      newBoard[target.y][target.x].p = PlayerTurn;\r\n      return newBoard;\r\n    });\r\n    setPawnSelected(false);\r\n  };\r\n\r\n  const EatPawn = (target: Pawn) => {\r\n    console.log(\"target move\", target); //!\r\n    if (!PawnSelected) return false;\r\n    let xEat: number = target.x - PawnSelected.x;\r\n    let yEat: number = target.y - PawnSelected.y;\r\n    const targetEat: { x: number; y: number } = {\r\n      x: (xEat !== 0 ? xEat / 2 : xEat) + PawnSelected.x,\r\n      y: (yEat !== 0 ? yEat / 2 : yEat) + PawnSelected.y,\r\n    };\r\n    setVirtualBoard((currentBoard) => {\r\n      const newBoard = JSON.parse(JSON.stringify(currentBoard));\r\n      newBoard[PawnSelected.y][PawnSelected.x].p = 0;\r\n      newBoard[target.y][target.x].p = PlayerTurn;\r\n      newBoard[targetEat.y][targetEat.x].p = 0;\r\n      return newBoard;\r\n    });\r\n  };\r\n\r\n  const [PawnSelected, setPawnSelected] = useState<Pawn | false>(false);\r\n\r\n  return (\r\n    <div className={`main p20 flex-col relative flex-end-align g25`}>\r\n      <div className=\"flex-col g25 w100\">\r\n        <h2 className=\"m0\">\r\n          Projects : 1PROJ\r\n          <i className=\"material-icons ml25\" onClick={() => setMenuOpen(true)}>\r\n            settings\r\n          </i>\r\n        </h2>\r\n        <h1\r\n          className={`big-dark-container scores flex-center g50  playerTurn${PlayerTurn}`}\r\n          onClick={() => console.log(virtualBoard)} //!\r\n        >\r\n          <span className=\"blue\">{P1score}</span>\r\n          <span>-</span>\r\n\r\n          <span className=\"red\">{P2score}</span>\r\n        </h1>\r\n        <div className={`board-container flex-col flex-center g25 big-dark-container `}>\r\n          <div className={`board playerTurn${PlayerTurn}`}>\r\n            {virtualBoard.map((e, ei) =>\r\n              e.map((f, fi) => (\r\n                <span key={\"case-\" + ei + \"-\" + fi} className={\"setting-line \" + f.ab}>\r\n                  <span className={\"case flex-center\"} data-placement-y={ei} data-placement-x={fi} data-player={f.p} onClick={(e) => clickPawn(e)}>\r\n                    {f.p !== 0 ? <span onClick={(e) => clickPawn(e)} className={`pawn flex-center ${f.p === 1 ? \"red-player\" : \"blue-player\"}`}></span> : null}\r\n                  </span>\r\n                </span>\r\n              ))\r\n            )}\r\n          </div>\r\n          {MenuOpen ? (\r\n            <div className=\"menu-pop-up absolute zi5 flex-center\">\r\n              <div className=\"small-normal-container\">\r\n                <h2 className=\"m0 mb25 blue txt-center\">Game Menu</h2>\r\n                <div className=\"flex-rox flex-between g25\">\r\n                  <div className=\"cta cta-blue\" onClick={() => InitGame()}>\r\n                    <span>{PlayerTurn === 0 ? \"START\" : \"RESUME\"}</span>\r\n                  </div>\r\n\r\n                  <Link className=\"cta cta-red\" to={\"/\"}>\r\n                    <span>BACK</span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage1PROJ;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}